#include<bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define vb vector<bool>
#define vvi vector<vi>

void dfs(int src, vvi &adj, int &count, vb &vis, unordered_map<int, bool> &malware, int &malwareCount){
	vis[src] = true;
	count++;
    if(malware[src]){
        malwareCount++;
    }
	for(int i=0;i<adj.size();i++){
        if(adj[src][i] == 1 && !vis[i]){
            dfs(i, adj, count, vis, malware, malwareCount);
        }
	}
}

int minMalwareSpread(vector<vector<int>>& adj, vector<int>& initial)
{
	// Write your code here
	int n = adj.size();
	unordered_map<int, bool> malware;
	for(int i=0;i<initial.size();i++){
		malware[initial[i]]=true;
	}
	vb vis(n, false);
	int count = 0;
	int maxCount = 0;
	int ans = 0;
	for(int i=0;i<initial.size();i++){
		if(!vis[initial[i]]){
			count = 0;
            int mcount =0;
			dfs(initial[i], adj, count, vis, malware, mcount);
			if(mcount <= 1 && count > maxCount){
				ans = i;
				maxCount = count;
			}
		}
	}
	return ans;
}